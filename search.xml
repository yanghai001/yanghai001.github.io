<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>笔记：django开发blog系统</title>
      <link href="2021/041037708.html"/>
      <url>2021/041037708.html</url>
      
        <content type="html"><![CDATA[<p>最近在python学习网学习黑马程序员的<a href="https://www.py.cn/course/1091.html">从0开发一个Django博客系统</a><br>，以下是学习过程中的笔记，以便后续复习。</p><hr><h3 id="一、环境安装和项目创建"><a href="#一、环境安装和项目创建" class="headerlink" title="一、环境安装和项目创建"></a>一、环境安装和项目创建</h3><h4 id="1-GitHub远程仓库的创建"><a href="#1-GitHub远程仓库的创建" class="headerlink" title="1.GitHub远程仓库的创建"></a>1.GitHub远程仓库的创建</h4><p>新建1个仓库<br>在“Repository name”中输入“blog”<br>在“Description”中输入“黑马程序员-python-django从0开发一个博客系统”<br>选择”public“<br>勾选”add.gitignore”,并设置为”python“<br>勾选“choose a license”,并设置为”MIT license”  </p><h4 id="2-远程仓库同步到本地"><a href="#2-远程仓库同步到本地" class="headerlink" title="2.远程仓库同步到本地"></a>2.远程仓库同步到本地</h4><p>要想同步仓库，需要安装git程序，参考下载安装教程: <a href="https://zhuanlan.zhihu.com/p/137448719#:~:text=%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91Git%E4%B8%8B%E8%BD%BD%E3%80%81%E5%AE%89%E8%A3%85%201%20%E7%82%B9%E5%87%BBWindows%202%20%E7%82%B9%E5%87%BB%2064-bit%20Git%20for,%E5%92%8C%20G%20...%206%20%E6%9F%A5%E7%9C%8BGit%E6%98%AF%E5%90%A6%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%20%E6%89%93%E5%BC%80cmd%E7%AA%97%E5%8F%A3%20%28win%2Br%E8%BE%93%E5%85%A5%20">Git下载、安装</a><br>值得注意的是从官网下载git很慢，可以从 <a href="https://npm.taobao.org/mirrors/git-for-windows/">淘宝镜像</a> 中选择需要的版本下载，推荐下载最新版本<br>程序安装好之后，打开cmd程序并切换到合适的路径，使用以下命令进行仓库的同步：</p><pre><code>git clone 你的仓库地址    </code></pre><p>注意：如果遇到”fatal: Could not read from remote repository“错误，是因为SSH key方面的问题导致的，解决方法参照<a href="https://blog.csdn.net/weixin_40922744/article/details/107576748">解决 “fatal: Could not read from remote repository.“</a></p><h4 id="3-python和pycharm安装"><a href="#3-python和pycharm安装" class="headerlink" title="3.python和pycharm安装"></a>3.python和pycharm安装</h4><p>python直接从官网下载很忙，建议从<a href="https://repo.huaweicloud.com/python/">华为python镜像</a> 中选择需要的版本下载<br>pycharm的话直接从官网下载即可，有专业版和社区版之分，社区版完全免费，但是学习django的话建议使用专业版，至于激活问题自行百度<br>具体的安装教程，参照：<a href="https://www.sohu.com/a/337364638_120255642">超详细Python与PyCharm安装教程，看这一篇就够了</a></p><h4 id="4-设置pip加速"><a href="#4-设置pip加速" class="headerlink" title="4.设置pip加速"></a>4.设置pip加速</h4><p>安装python3以后，是自带了pip安装工具的，可以在cmd命令行中使用pip3 -V验证是否安装程序：  </p><pre><code>pip3 -V</code></pre><p>如果出现“ModuleNotFoundError: No module named ‘pip’”错误，参照<a href="https://blog.csdn.net/wwangfabei1989/article/details/80107147">解决 ModuleNotFoundError: No module named ‘pip’</a>使用以下命令升级一下pip安装工具即可：</p><pre><code>python -m ensurepippython -m pip install --upgrade pip</code></pre><p>默认的下载地址下载很慢，安装第三方库的时候经常超时出错，所以需要设置pip加速。<br>我个人笔记喜欢使用华为镜像加速，使用以下命令设置pip源进行加速：</p><pre><code>pip3 config set global.index-url https://repo.huaweicloud.com/repository/pypi/simple</code></pre><h4 id="5-创建虚拟环境"><a href="#5-创建虚拟环境" class="headerlink" title="5.创建虚拟环境"></a>5.创建虚拟环境</h4><p>可以参照<a href="https://www.cnblogs.com/shyern/p/11284127.html">Python创建虚拟环境</a> 创建虚拟环境，下面我们用命令行的方法创建：<br>①安装虚拟环境的第三方包 virtualenv：</p><pre><code>pip3 install virtualenv</code></pre><p>②创建虚拟环境<br>先cd到存放虚拟环境的地址，使用”virtualenv 环境名“创建虚拟环境，下面我们在桌面创建一个名为blog_env的虚拟环境：  </p><pre><code>cd desktopvirtualenv blog_env</code></pre><p>③激活虚拟环境:<br>    cd blog_env/Scripts # 跳转到虚拟环境的文件夹<br>    activate # 激活虚拟环境<br>    pip list 查看当前虚拟环境下所安装的第三方库<br>    deactivate 退出虚拟环境<br>    要删除虚拟环境，直接删除虚拟环境所在目录即可</p><pre><code>cd blog_env/Scriptsactivate</code></pre><h4 id="6-虚拟环境中安装django框架"><a href="#6-虚拟环境中安装django框架" class="headerlink" title="6.虚拟环境中安装django框架"></a>6.虚拟环境中安装django框架</h4><p>激活虚拟环境后，使用以下命令安装django:  </p><pre><code>pip3 install django</code></pre><p>注意：可以指定版本安装，如pip3 install django==2.2.10</p><h4 id="7-创建django工程"><a href="#7-创建django工程" class="headerlink" title="7.创建django工程"></a>7.创建django工程</h4><p>先cd到本地仓库文件夹  </p><pre><code>cd ..cd ..cd blog</code></pre><p>创建工程</p><pre><code>django-admin stratproject blog</code></pre><p>可以看到本地仓库文件夹内多了个blog工程文件夹，进入到工程文件夹中  </p><pre><code>cd blog</code></pre><p>启动django工程</p><pre><code>python manage.py runserver</code></pre><p>看到“Starting development server at <a href="http://127.0.0.1:8000/%E2%80%9D">http://127.0.0.1:8000/”</a> 字样说明启动成功，在浏览器中输入“127.0.0.1:8000”即可看到django的欢迎界面，说明工程创建成功<br>这时候可以按ctrl+C停止工程</p><h4 id="8-本地仓库同步到远程仓库"><a href="#8-本地仓库同步到远程仓库" class="headerlink" title="8.本地仓库同步到远程仓库"></a>8.本地仓库同步到远程仓库</h4><p>先cd到本地仓库文件夹</p><pre><code>cd ..</code></pre><p>将所有文件加入追踪清单</p><pre><code>git add .</code></pre><p>提交清单</p><pre><code>git commit -m &quot;CreateProject&quot;</code></pre><p>注意：第一次提交会出现错误“Author identity unknown”，需要先设置邮箱和用户名：</p><pre><code>git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot;</code></pre><p>推送清单（需要输入SSH key的密码）</p><pre><code>git push</code></pre><p>稍等一会，即可在远程仓库中看到工程文件，整个工程创建完成。</p><h3 id="二、相关配置"><a href="#二、相关配置" class="headerlink" title="二、相关配置"></a>二、相关配置</h3><h4 id="1-pycharm配置解释器"><a href="#1-pycharm配置解释器" class="headerlink" title="1.pycharm配置解释器"></a>1.pycharm配置解释器</h4><p>用pycharm打开blog工程文件夹</p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记：站点部署记录</title>
      <link href="2021/040537708.html"/>
      <url>2021/040537708.html</url>
      
        <content type="html"><![CDATA[<p>本来打算使用django部署一个属于自己的站点，奈何在腾讯云上部署站点一直不成功，然后发现了nodejs+hexo+github快速部署自己的博客站点的方法，后续再看看能不能扩展其他功能，比如书籍、音乐、视频推荐等。</p><p>以下记录本站点部署的过程。</p><hr><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p><a href="https://www.bilibili.com/video/BV1je41147Ma?p=2">github+nodejs+git环境安装</a><br>1.github注册账号，并创建一个仓库，仓库的命名是：(你的用户名).github.io,如yanghai001.github.io<br>2.下载安装nodejs,参考教程：<a href="https://blog.csdn.net/qq_43285335/article/details/90696126">nodejs下载安装及配置环境</a><br>3.下载安装git,参考教程：<a href="https://www.cnblogs.com/xueweisuoyong/p/11914045.html">Windows系统Git安装教程（详解Git安装过程）</a></p><h3 id="使用hexo创建和部署网站"><a href="#使用hexo创建和部署网站" class="headerlink" title="使用hexo创建和部署网站"></a>使用hexo创建和部署网站</h3><p><a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke">hexo快速创建和部署网站（按步骤进行）</a>，参照视频教程：<br><a href="https://www.bilibili.com/video/BV1je41147Ma?p=4">第一部分</a><br><a href="https://www.bilibili.com/video/BV1je41147Ma?p=3">第二部分</a></p><h3 id="更换和安装主题"><a href="#更换和安装主题" class="headerlink" title="更换和安装主题"></a>更换和安装主题</h3><p><a href="https://zhuanlan.zhihu.com/p/22735619">文字教程</a><br><a href="https://www.bilibili.com/video/BV1je41147Ma?p=7">视频教程</a></p><h3 id="网站更新"><a href="#网站更新" class="headerlink" title="网站更新"></a>网站更新</h3><p>部署完成后若需要更新文件，使用以下命令上传文件到github后，重新访问网站即可看到更新的内容</p><pre class=" language-bash"><code class="language-bash">$ hexo g -d</code></pre><h3 id="matery主题说明"><a href="#matery主题说明" class="headerlink" title="matery主题说明"></a>matery主题说明</h3><p><a href="https://blog.csdn.net/jspnetcn/article/details/104111651">基于Hexo的matery主题搭建博客并优化</a><br><a href="https://blog.csdn.net/qq_41496127/article/details/108749638">基于Hexo的Matery主题个人博客的部分个性化修改</a><br><a href="https://chen-shang.github.io/2019/08/15/ji-zhu-zong-jie/hexo/hexo-theme-matery-zhu-ti-you-hua/">hexo-theme-matery主题优化</a><br><a href="https://yafine-blog.cn/posts/12b4.html">Hexo+Github 博客搭建之 Matery 主题个性化修改篇（二）</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> github </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
